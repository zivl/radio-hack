<!DOCTYPE html>
<html>
<head>
	<meta charset="utf-8">
	<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
	<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, minimum-scale=1, user-scalable=no, minimal-ui">
	<title>Streaming Test</title>
	<script type="text/javascript" src="/socket.io/socket.io.js"></script>
	<script type="text/javascript" src="/js/SFMediaStream.js"></script>
</head>
<body>
	<h1><%= title %></h1>
	<button onclick="asPresenter()">Broadcast</button>
	<input type="text" id="debug">

	<script type="text/javascript">
		var mySocket = io("/", {transports:['websocket']});
		var debug = document.querySelector('#debug');

		// ===== Presenter =====
		var presenterMedia = false;
		function asPresenter(){
			if(presenterMedia === false){
				// Set latency to 100ms (Equal with streamer)
				presenterMedia = new ScarletsMediaPresenter({
				    audio:{
				        channelCount:1,
				        echoCancellation: false
				    }
				}, 100);

				presenterMedia.onRecordingReady = function(packet){
				    console.log("Recording started!");
				    console.log("Header size: " + packet.data.size);

				    // Every new client streamer must receive this header buffer data
				    mySocket.emit('bufferHeader', packet);
				}

				presenterMedia.onBufferProcess = function(streamData){
					debug.value = "Buffer sent: " + streamData[0].size + "bytes";
				    mySocket.emit('stream', streamData);
				}
			}

			presenterMedia.startRecording();
		}
		
	</script>
</body>
</html>
