<!DOCTYPE html>
<html>
<head>
	<meta charset="utf-8">
	<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
	<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, minimum-scale=1, user-scalable=no, minimal-ui">
	<title>Streaming Test</title>
	<link rel="stylesheet" href="/stylesheets/circle.css"/>
	<script type="text/javascript" src="/socket.io/socket.io.js"></script>
	<script type="text/javascript" src="/js/SFMediaStream.js"></script>
	<script type="text/javascript" src="/js/listenerMessagesControl.js"></script>
</head>
<body>
	<h1><%= title %></h1>
	<div id="circle-container">
		<div id="circle">
		<svg version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="300px" height="300px" viewBox="0 0 300 300" enable-background="new 0 0 300 300" xml:space="preserve">
			<defs>
				<path id="circlePath" d="M 150, 150 m -60, 0 a 60,60 0 0,1 120,0 a 60,60 0 0,1 -120,0 "/>
			</defs>
			<circle cx="150" cy="100" r="75" fill="none"/>
			<g>
				<use xlink:href="#circlePath" fill="none"/>
				<text fill="#000">
					<textPath xlink:href="#circlePath">Pause Broadcast. Pause Broadcast. Pause Broadcast. </textPath>
				</text>
			</g>
		</svg>
		</div>
	</div>
	<audio controls style="visibility: hidden;"></audio>

	<script type="text/javascript">
		var mySocket = io("/", {transports:['websocket']});
		
		// ===== Streamer =====
		var audioStreamer = false;
		function asStreamer(){
			if(audioStreamer === false){
				// Set latency to 100ms (Equal with presenter)
				ScarletsMediaUnlock();
				audioStreamer = new ScarletsAudioStreamer(100);
				audioStreamer.playStream();

				// Buffer header must be received first
				mySocket.on('bufferHeader', function(packet){
					audioStreamer.setBufferHeader(packet);
				});

				// Receive buffer and play it
				mySocket.on('stream', function(packet){
					audioStreamer.realtimeBufferPlay(packet)
				});
			}

			// Request buffer header
			mySocket.emit('requestBufferHeader', '');
		}

		setTimeout(function() {asStreamer();}, 1000);
	</script>
</body>
</html>
